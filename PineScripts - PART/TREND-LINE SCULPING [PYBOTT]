// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© PuttipongAutomateTrader
// Modified To Strategy

//@version=4
strategy("Trend Lines v2 [PYBOTT - Modified]", overlay=true, max_bars_back = 4000)
startyear = input(defval = 2020, title = "Start Year")
startmonth = input(defval = 1, title = "Start Month")
startday = input(defval = 1, title = "Start day")
prd = input(defval = 20, title="Pivot Point Period", minval = 10, maxval = 50)
PPnum = input(defval = 3, title="Number of Pivot Point to check", minval = 2, maxval = 3)

float ph = na, float pl = na
ph := pivothigh(prd, prd)
pl := pivotlow(prd, prd)

getloc(bar_i)=>
    _ret = bar_index + prd - bar_i 
    
//get last 3  pivot highs - (hope to have Array in Pine version 5)
t1pos = valuewhen(ph, bar_index, 0)
t1val = nz(high[getloc(t1pos)])
t2pos = valuewhen(ph, bar_index, 1)
t2val = nz(high[getloc(t2pos)])
t3pos = valuewhen(ph, bar_index, 2)
t3val = nz(high[getloc(t3pos)])
//get last 3 pivot lows 
b1pos = valuewhen(pl, bar_index, 0)
b1val = nz(low[getloc(b1pos)])
b2pos = valuewhen(pl, bar_index, 1)
b2val = nz(low[getloc(b2pos)])
b3pos = valuewhen(pl, bar_index, 2)
b3val = nz(low[getloc(b3pos)])

getloval(l1, l2)=>
    _ret1 = l1 == 1 ? b1val : l1 == 2 ? b2val : l1 ==3 ? b3val : 0
    _ret2 = l2 == 1 ? b1val : l2 == 2 ? b2val : l2 ==3 ? b3val : 0
    [_ret1, _ret2]

getlopos(l1, l2)=>
    _ret1 = l1 == 1 ? b1pos : l1 == 2 ? b2pos : l1 ==3 ? b3pos : 0
    _ret2 = l2 == 1 ? b1pos : l2 == 2 ? b2pos : l2 ==3 ? b3pos : 0
    [_ret1, _ret2]

gethival(l1, l2)=>
    _ret1 = l1 == 1 ? t1val : l1 == 2 ? t2val : l1 ==3 ? t3val : 0
    _ret2 = l2 == 1 ? t1val : l2 == 2 ? t2val : l2 ==3 ? t3val :  0
    [_ret1, _ret2]

gethipos(l1, l2)=>
    _ret1 = l1 == 1 ? t1pos : l1 == 2 ? t2pos : l1 ==3 ? t3pos : 0
    _ret2 = l2 == 1 ? t1pos : l2 == 2 ? t2pos : l2 ==3 ? t3pos :  0
    [_ret1, _ret2]

// line definitions
var line l1 = na, var line l2 = na, var line l3 = na
var line t1 = na, var line t2 = na, var line t3 = na

//delete old lines
line.delete(l1), line.delete(l2), line.delete(l3)
line.delete(t1), line.delete(t2), line.delete(t3)

// there is limitation for number of lines on chart (<=50), and we use 20 uptrend lines + 20 downtrend lines (total 40) 
maxline = 3

//Line coloring
ulcolor = color.red
dlcolor = color.blue

// loop for pivot points to check if there is possible trend line
countlinelo = 0
countlinehi = 0

starttime = timestamp(startyear, startmonth, startday, 0, 0, 0)



if time >= starttime
    for p1 = 1 to PPnum - 1 
        up1 = 0
        up2 = 0
        dp1 = 0
        dp2 = 0
        uv1 = 0.0
        uv2 = 0.0
        if countlinelo <= maxline
            for p2 = PPnum to p1 + 1
                [val1, val2] = getloval(p1, p2)
                [pos1, pos2] = getlopos(p1, p2)
                if val1 > val2
                    diff = (val1 - val2) / (pos1 - pos2)
                    hline = val2 + diff
                    lloc = bar_index
                    lval = low
                    valid = true
                    xc = 0
                    for x = pos2 + 1 - prd to bar_index
                        xc := x
                        if nz(close[getloc(x + prd)]) < hline
                            valid := false
                            break
                        lloc := x
                        lval := hline
                        hline := hline + diff
                    
                        
                    if valid
                        uv1 := hline
                        uv2 := val2
                        up1 := lloc
                        up2 := pos2
                        break

        dv1 = 0.0
        dv2 = 0.0
        if countlinehi <= maxline
            for p2 = PPnum to p1 + 1                
                [val1, val2] = gethival(p1, p2)
                [pos1, pos2] = gethipos(p1, p2)
                if val1 < val2
                    diff = (val2 - val1) / (pos1 - pos2)
                    hline = val2 - diff
                    lloc = bar_index
                    lval = high
                    valid = true
                    xc = 0
                    for x = pos2 + 1 - prd to bar_index
                        xc := x
                        if nz(close[getloc(x + prd)]) > hline
                            valid := false
                            break
                        lloc := x
                        lval := hline
                        hline := hline - diff
                        
                    if valid
                        dv1 := hline
                        dv2 := val2
                        dp1 := lloc
                        dp2 := pos2
                        break
                        
        // if there is continues uptrend line then draw it
        if up1 != 0 and up2 != 0 and countlinelo < maxline
            countlinelo := countlinelo + 1
            l1 := countlinelo == 1 ? line.new(up2 - prd, uv2, up1, uv1 , color = color.red) : l1
            l2 := countlinelo == 2 ? line.new(up2 - prd, uv2, up1, uv1) : l2
            l3 := countlinelo == 3 ? line.new(up2 - prd, uv2, up1, uv1) : l3
            
        // if there is continues downtrend line then draw it
        if dp1 != 0 and dp2 != 0 and countlinehi < maxline
            countlinehi := countlinehi + 1
            t1 := countlinehi == 1 ? line.new(dp2 - prd, dv2, dp1, dv1 , color = color.green) : t1
            t2 := countlinehi == 2 ? line.new(dp2 - prd, dv2, dp1, dv1) : t2
            t3 := countlinehi == 3 ? line.new(dp2 - prd, dv2, dp1, dv1) : t3


Resist_L = 0.0
Resist_H = 0.0

plotchar(countlinelo , "countlinelo")
plotchar(countlinehi , "countlinehi")
plotchar(maxline , "maxline")
plotchar(line.get_y2(l1) , "Low_Resistance")
plotchar(line.get_y2(t1) , "High_Resistance")

detect_percent = input(defval = 1.5 , title = "Trend Detect Percent%")
NOT_TRADE = line.get_y2(l1) > 0 and  line.get_y2(t1) > 0

plotchar(NOT_TRADE , "NOT_TRADE")

if line.get_y2(l1) * (1 + detect_percent/100) > close and NOT_TRADE != true
    strategy.entry("SHORT" , long = false ,when = strategy.position_size >= 0 )
    Resist_L := line.get_y2(l1)


if line.get_y2(t1) * (1 - detect_percent/100) < close and NOT_TRADE != true
    strategy.entry("LONG" , long = true ,when = strategy.position_size <= 0 )
    Resist_H := line.get_y2(t1)



